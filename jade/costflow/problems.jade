
section
  +slide
    h1 最小割的一些例題

  +slide
    +problem({name: 'Angry Programmer', src:'UVa 11506', 
      url:'https://uva.onlinejudge.org/index.php?option=onlinejudge&page=show_problem&problem=2501'}).
        你被你老闆開除了，因此你決定在他打 LOL 的時候讓他斷線。
        從他的電腦 \( s \) 到 LOL 伺服器 \( t \) 有一些 Router，Router 間有一些
        網路線相連，剪掉 \( u \) 到 \( v \) 的網路線要花 \( c(u, v) \)，如
        果 \( s \) 到 \( t \) 沒辦法經過一些 Router 連到就會斷線，問你要達成計畫
        的最小花費。

    p.fragment 裸的最小割，BJ4

  +slide
    h2 分兩類問題

    p 先看個例題

    +problem({name: '生產產品問題'}).
      你有 \( n \) 個產品可以生產，並且有 \( m \) 種不同的機器，生產第 \( i \) 個產
      品必須要有某一些等定的機器，但不同的產品如果用到相同的機器的話只需要一個
      機器即可，現在給你每個機器的價格，和生產每個產品的獲利，你要決定
      要生產哪些產品使你的獲利最高。

  +slide
    h2 分兩類問題
    p 分成要買/不要買的機器，要生產/不要生產的產品。
    p 把要的就分到 \( S \)，不要的就分到 \( T \)。
    p 當然，還是要建模使得求出的答案即是題目要的。

  +slide
    h3 建模方法
    ul
      li.fragment 選 \( u \) 但不選 \( v \) 要花費 \( c \)。
      li.fragment 選 \( u \) 就一定要選擇 \( v \)。
      li.fragment 選 \( u \) 要花費 \( c \)。
      li.fragment 選 \( u \) 會賺到 \( c \)。
    .blackboard

  +slide
    p 回到那一題
    .blackboard

  +slide
    h2 應用

    p 二分圖匹配有不少應用
    ul
      li.fragment 分配任務
      li.fragment 分發志願序
      li.fragment 決定動漫結局

  +slide
    img(src="img/m1.jpg")

  +slide
    img(src="img/m2.jpg")
    
  +slide
    h3 二分圖轉 Flow
    img.x2(src="img/flowprob/f1.svg")
    
  +slide
    +problem({name: 'Soldier and Traveling', src: 'Codeforces 546 E', 
      url: 'http://codeforces.com/problemset/problem/546/E'})
        | 給你一張圖 \( G = (V, E) \)，每一點一開始分別有 \( a_i \) 個士兵。
        | 現在你希望一天後每個點分別有 \( b_i \) 個士兵，但每個士兵
        | 只能留在原地或是到相鄰的點，問你可不可能？

    .blackboard

  +slide
    +problem({name: '無向圖的歐拉回路'})
      | 給你一張混合圖 \( G = (V, E) \)，也就是同時有有向邊和無向邊的圖。
      | 問你存不存在一條歐拉回路？

  +slide
    h2 Euler path
    
    | 一筆畫走完整張圖。

  +slide
    h3 Example

    img(width="60%" src="img/euler.svg")

  +slide
    h3 有解的條件

    p 觀察一個路徑 \( v_1 \to v_2 \to \cdots \to v_n \)
    p 每一個中間走到的點 \( +2 \) ，兩端 \( +1 \)。

    aside.notes.
      度數奇偶是關鍵

  +slide 
    +theorem({name: "Euler Path 的存在條件"})
      | 定義一個 <b> 奇點 </b> 是度數為奇數的點。如果圖連通，有
      ul
        li.fragment 一個無向圖有歐拉路徑的條件是其奇點的個數是 \( 0 \) 或 \( 2 \)。
        li.fragment 一個無向圖有歐拉迴路的條件是其奇點的個數是 \( 0 \)。
        li.fragment 一個有向圖有歐拉路徑的條件是所有點都滿足 \( \deg^+(v) = \deg^-(v) \)， <br/>
          | 或是除此之外有一個點滿足 \( \deg^+(v) = \deg^-(v) + 1 \)，<br/>
          | 另一個滿足 \( \deg^+(v) = \deg^-(v) - 1 \)。
        li.fragment 一個有向圖有歐拉迴路的條件是所有點都滿足 \( \deg^+(v) = \deg^-(v) \)，

    .blackboard

  +slide
    h3 重點
    p.fragment 一個有向圖有歐拉迴路的條件是所有點都滿足 \( \deg^+(v) = \deg^-(v) \)，
    p.fragment 混合圖呢？

  +slide
    h3 觀察
    p.fragment 其實就是要把每一個無向邊都定向成有向圖
    p.fragment 最後要求每一個點的 \( \deg^+(v) = \deg^-(v) \)。
    .blackboard

  +slide
    p.fragment 令還沒有算無向邊時 \( \delta(v) = \deg^-(v) - \deg^+(v) \)。
    p.fragment 如果我們把一個邊定成 \( u \to v \) 後， 
      | \( \delta(u) \gets \delta(u) - 1, \delta(v) \gets \delta(v) + 1 \)。
    p.fragment 可以想作一單位的 $\delta$ 從 \( u \) 流到了 \( v \)。
    .blackboard

  +slide
    p.fragment 對於那些 \( \delta(v) > 0 \) 的，也就是需要流出 \( \delta(v) \)
      | 的，我們就建 \( s \to v \)。
    p.fragment 對於那些 \( \delta(v) < 0 \) 的，同理建 \( v \to t \)。
    p.fragment 可以補好補滿 \( \iff \abs{f} = \sum_{\delta(v) > 0} \delta(v) \)
    .blackboard

      

